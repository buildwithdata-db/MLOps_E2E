# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
    tags-ignore:
      - '*.*'
    paths-ignore:
      - 'README.md' # if we change documentation only, we don't need to run tests
  pull_request:
    branches: [ main ]
    tags-ignore:
      - '*.*'
    paths-ignore:
      - 'README.md' # if we change documentation only, we don't need to run tests

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.8]

    env:
      DATABRICKS_HOST_STG: ${{ secrets.DATABRICKS_HOST_STG }}
      DATABRICKS_TOKEN_STG: ${{ secrets.DATABRICKS_TOKEN_STG }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      # cache the libraries
      - uses: actions/cache@v2
        id: cache
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
            ${{ runner.os }}-pip-

      - name: Install pip
        run: |
          python -m pip install --upgrade pip
          
      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Deploy the code and launch integration tests
        run: |
          databricks repos update --path=/Repos/Staging/databricks-repos-ci-demo --branch=${{ env.GITHUB_HEAD_REF_SLUG }}
          dbx deploy --files-only --no-rebuild --deployment-file=conf/staging.json --no-package
          dbx launch --job=nutter-testing-suite --as-run-submit --trace